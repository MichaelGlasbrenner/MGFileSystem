- as an alternative to making a hand-shake between client and fsmanager; the client could also mount
  directly the directory on the storage node; during mount, alternative storage nodes should also be specified;
  if an error/exception occurs, the program should switch to the next storage node on the list...
  (drawback: load balancing not satisfied)

distributed filesystem:
- file writes are accompanied by an rsync to the secondary storage nodes 
  or alternatively synchronization is done by unison

implement a FSmanager daemon, which runs on storage nodes and has the following tasks:
- knowing which storage nodes are available and online
- upon mounting, make a handshake with the clients
- write needed information to files on the client machines and update these files
- assign primary and secondary storages to the clients (for "equivalent nodes" do this randomly)
- how to implement home and work with different replication levels ? -> use a separate filesystem, which 
  nevertheless could be managed by the same daemon; for each filesystem, store the information about
  the storage nodes  


-------------------------------------------

can different folders be mounted at the same time ?

cp / mv does not update the timestamps !!

after copy, the file permissions and ownerships or not identical !!

one should not be able to copy file of a different user such as root

adjust tests also for ssh-backend

implement truncate for ssh-backend

no error, if public key authentication is chosen, but keys are not installed !?

------------------------------------

test on VMs:

root-pw:"root", ip : 192.168.122.252
